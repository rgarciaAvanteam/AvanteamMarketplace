/**
 * main.js - Point d'entr√©e principal du Marketplace
 * 
 * Ce fichier est charg√© en dernier et se charge d'initialiser
 * tous les modules du Marketplace dans le bon ordre.
 */

(function() {
    // Attendre que le DOM soit compl√®tement charg√©
    document.addEventListener('DOMContentLoaded', function() {
        console.log("üöÄ Initialisation du Marketplace...");
        
        // V√©rifier que le m√©diateur est disponible
        if (typeof MarketplaceMediator === 'undefined') {
            console.error("Le m√©diateur n'est pas disponible. V√©rifiez que le fichier mediator.js est correctement charg√©.");
            return;
        }
        
        // Initialiser la configuration
        const configModule = MarketplaceMediator.getModule('config');
        if (configModule) {
            configModule.init();
            
            // V√©rifier que la version de la plateforme est bien d√©finie
            const platformVersion = configModule.getPlatformVersion();
            if (!platformVersion || platformVersion.trim() === '') {
                console.error("ERREUR: Version de plateforme non d√©finie apr√®s initialisation.");
                
                // Essayer de r√©cup√©rer depuis les √©l√©ments HTML directement
                try {
                    const versionDisplays = [
                        document.querySelector('.marketplace-version .version-value'),
                        document.getElementById('hfPlatformVersion')
                    ];
                    
                    for (const display of versionDisplays) {
                        if (display && display.textContent && display.textContent.trim() !== '') {
                            const version = display.textContent.trim();
                            console.log(`Version trouv√©e dans le DOM: ${version}`);
                            configModule.set('platformVersion', version);
                            break;
                        }
                    }
                } catch (e) {
                    console.error("Erreur lors de la r√©cup√©ration de la version depuis le DOM:", e);
                }
                
                // Si toujours pas de version, utiliser une valeur par d√©faut
                if (!configModule.getPlatformVersion()) {
                    console.warn("D√©finition d'une version par d√©faut (23.10.0)");
                    configModule.set('platformVersion', '23.10.0');
                }
            } else {
                console.log(`Version de plateforme configur√©e: ${platformVersion}`);
            }
        } else {
            console.error("Module de configuration non disponible.");
            return;
        }
        
        // Initialiser le module d'authentification
        const authModule = MarketplaceMediator.getModule('auth');
        if (authModule) {
            authModule.init();
        } else {
            console.warn("Module d'authentification non disponible.");
        }
        
        // Initialiser le module de composants
        const componentsModule = MarketplaceMediator.getModule('components');
        if (componentsModule) {
            componentsModule.init();
        } else {
            console.error("Module de composants non disponible.");
            return;
        }
        
        // Initialiser le module de filtres
        const filtersModule = MarketplaceMediator.getModule('filters');
        if (filtersModule) {
            filtersModule.init();
        } else {
            console.warn("Module de filtres non disponible.");
        }
        
        // Initialiser le module d'interface utilisateur en dernier
        const uiModule = MarketplaceMediator.getModule('ui');
        if (uiModule) {
            uiModule.init();
        } else {
            console.error("Module d'interface utilisateur non disponible.");
            return;
        }
        
        // Ajouter des gestionnaires d'√©v√©nements globaux
        window.addEventListener('error', function(event) {
            console.error("Erreur JavaScript globale:", event.error || event.message);
        });
        
        // D√©finir des fonctions globales minimales (wrapper vers les modules)
        // Ces fonctions sont les seules expos√©es globalement pour l'interaction externe
        window.MarketplaceApp = {
            refreshComponents: function() {
                const ui = MarketplaceMediator.getModule('ui');
                if (ui) {
                    ui.refreshAllComponents();
                }
            },
            showComponentDetails: function(componentId) {
                const ui = MarketplaceMediator.getModule('ui');
                if (ui) {
                    ui.showComponentDetails(componentId);
                }
            },
            login: function() {
                const auth = MarketplaceMediator.getModule('auth');
                if (auth) {
                    auth.login();
                }
            },
            logout: function() {
                const auth = MarketplaceMediator.getModule('auth');
                if (auth) {
                    auth.logout();
                }
            },
            showNotification: function(message, type) {
                const auth = MarketplaceMediator.getModule('auth');
                if (auth) {
                    auth.showNotification(message, type);
                }
            }
        };
        
        console.log("‚úÖ Marketplace initialis√© avec succ√®s!");
    });
})();